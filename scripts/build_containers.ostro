#!/usr/bin/env bash
set -e
set -o pipefail


# This removes the old test containers, and builds a new ostro container.
# If you do not have the deps containers, it will build them but this takes awhile
# it does NOT remove the deps images
#
# Example:
#
# ./scripts/build_containers.ostro


if [ "$OSTRO_RELEASE" = "" ]; then
    OSTRO_RELEASE="v1.0.0"
fi
if [ "$DOCKERHUB_REPO" = "" ]; then
    DOCKERHUB_REPO="crops"
fi

TOPDIR=`git rev-parse --show-toplevel`

# remove ostro builder image as we will rebuild it
Q=`docker images  -q ${DOCKERHUB_REPO}/ostrobuilder:${OSTRO_RELEASE}`
if [ "$Q"  != "" ]; then
    echo "Removing ostro image"
    docker rmi -f $Q
fi

cd ${TOPDIR}/dockerfiles;

Q=`docker images  -q ostro:deps`
if [ "$Q"  == "" ]; then
    echo "Build ostro deps image"
    docker build -t ostro:deps -f Dockerfile.ostro.deps  ..
fi
Q=`docker images  -q ${DOCKERHUB_REPO}/ostrobuilder:${OSTRO_RELEASE}`
if [ "$Q"  == "" ]; then
    echo "Build ostro builder image"
    docker build -t ${DOCKERHUB_REPO}/ostrobuilder:${OSTRO_RELEASE} --build-arg RELEASE=${OSTRO_RELEASE} -f Dockerfile.ostro  ..
fi
